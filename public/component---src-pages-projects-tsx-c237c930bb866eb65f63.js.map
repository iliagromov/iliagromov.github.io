{"version":3,"file":"component---src-pages-projects-tsx-c237c930bb866eb65f63.js","mappings":"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","sources":["webpack://frontend/./src/components/common/Projects/Card.tsx","webpack://frontend/./src/components/common/Projects/Projects.tsx","webpack://frontend/./src/components/containers/PageProjects/PageProjects.tsx","webpack://frontend/./src/pages/projects.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { EffectCards } from \"swiper\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nimport { blockProject, projectPage } from '../../../shared/types';\n\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport './Card.sass';\n\ntype CardProps = {\n    blockProject: blockProject,\n    projectLink: string,\n}\n\nconst Card: FC<CardProps> = (props) => {\n    const {\n        blockProject: {\n            title,\n            days,\n            technology,\n            pages\n        },\n        projectLink,\n    } = props;\n\n    const link = projectLink ? projectLink : '/projects';\n\n    const renderPages = pages && pages.map((page: projectPage, idx: number) => {\n        const selfLayout = page.pageLayouts ? page.pageLayouts : null;\n\t\t\n\t\tconst image = selfLayout ? selfLayout[0].layout?.sourceUrl : '';\n\n\t\tconst imageAlt = selfLayout ? selfLayout[0].layout?.altText : '';\n\n        \n        return (\n            <SwiperSlide className=\"swiperCardPage\" key={`page${idx+1}`}> {page.pagetitle} {idx+1}\n                <img src={image} alt={imageAlt} />\n            </SwiperSlide>\n        );\n    });\n\n\n    const renderTechnology = technology && technology.map((item, i) => {\n        return (<span key={`technology${i}`} >{item.name}</span>)\n    });\n\n    return (\n        <article className=\"card\">\n            <Link className=\"card-link\" to={link}>\n                <div className=\"card-header\">\n                    <p>Sep 11th 2020</p>\n                    <h2>\n                        {title}\n                    </h2>\n                </div>\n\n                <div className=\"card-days\">\n                    <div className=\"card-days__count\">\n                        {pages.length} \n                        <span className=\"card-days__count-text\">\n                        Страниц разработано\n                        </span>\n                        \n                    </div>\n                    <div className=\"card-days__svg\">\n                        <svg className=\"half-circle\" viewBox=\"0 0 106 57\">\n                            <path d=\"M102 4c0 27.1-21.9 49-49 49S4 31.1 4 4\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"card-pages\">\n                    <Swiper\n                        effect={\"cards\"}\n                        grabCursor={true}\n                        modules={[EffectCards]}\n                        className=\"swiperCardPages\"\n                    >\n                        {renderPages}\n                    </Swiper>\n                </div>\n\n                <div className=\"tags\">\n                    {renderTechnology}\n                </div>\n            </Link>\n        </article>\n    );\n}\n\n\nexport default Card;\n\n\n","import React, { FC } from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from 'gatsby-link';\n\nimport './Projects.sass';\nimport './Card.sass';\nimport Card from './Card';\nimport { blockProject, WpProjectPage } from '../../../shared/types';\n\ntype ProjectProps = {\n    projectsArray: WpProjectPage[],\n}\n\n\nconst Projects: FC<ProjectProps> = (props) => {\n    \n    function sliceIntoChunks(arr: Object[], chunkSize: number) {\n        const res = [];\n        for (let i = 0; i < arr.length; i += chunkSize) {\n            const chunk = arr.slice(i, i + chunkSize);\n            res.push(chunk);\n        }\n        return res;\n    }\n\n    const projectsGrouped = sliceIntoChunks(props.projectsArray, 5);\n\n    const projectRender = props.projectsArray && projectsGrouped.map((group: any, idx) => {\n        const keyGroup = `group${idx}`;\n\n        const projectRowRender = group.map((project: WpProjectPage, idx: number) => {\n            const projectLink = project.uri;\n            // console.log(project);\n            const keyProject = `${keyGroup}__project${idx}`;\n            return (\n                <Card\n                    projectLink={projectLink}\n                    blockProject={project.blockProject}\n                    key={keyProject} />\n            )\n        });\n        \n        return (\n            <div className='projects-content row' key={keyGroup} >\n                {projectRowRender}\n            </div>\n        )\n\n    });\n\n    return (\n        <section className=\"projects isAnimate animated\">\n            <div className=\"page__title page_transform-uppercase page_text-center\">\n                <h2 className=\"page__subtitle_big\">Проекты</h2>\n                <h2 className=\"page__title_main page__title-h2 page_bold\">Проекты{props.projectsArray.length}+</h2>\n            </div>\n            <div className=\"wrapper\">\n                <div className=\"inner\">\n                    {projectRender}\n                </div>\n            </div>\n        </section>\n    );\n}\n\n\nexport default Projects;\n\n\n","import * as React from \"react\";\nimport { PageProps, useStaticQuery } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport Projects from \"../../common/Projects/Projects\";\nimport { wpPage } from \"../../../shared/types\";\n\ntype PageProjectsProps = {\n  wpPage: wpPage\n}\n\n\nconst PageProjects: React.FC<PageProjectsProps> = (props) => {\n\n  // console.log(props);\n  // const projects = props.wpQueryData.allWpProject.nodes;\n  // const projects = [];\n  const {projects} = props.wpPage.blockProjects;\n  // console.log(projects);\n  return (\n    <>\n      <Projects projectsArray={projects}/>\n     \n\n    </>\n  )\n}\nexport default PageProjects;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layouts/Default\"\nimport SEO from \"../components/seo\"\n// import { StaticImage, GatsbyImage, getImage, withArtDirection  } from \"gatsby-plugin-image\";\nimport PageProjects from \"../components/containers/PageProjects/PageProjects\";\nimport { wpPage } from \"../shared/types\";\n\n\nexport const query = graphql`\n  query {\n      wpPage(uri: {eq: \"/projects-page/\"}) {\n        id\n        title\n        content\n        blockProjects {\n          projects {\n            ... on WpProject {\n              id\n              uri\n              title\n              slug\n              link\n              blockProject {\n                title\n                task\n                sitelink\n                shortdescription\n                days\n                description\n                format\n                pages {\n                  pagetitle\n                  image {\n                    altText\n                    title\n                    sourceUrl\n                  }\n                  pageLayouts {\n                    layout {\n                      altText\n                      title\n                      sourceUrl\n                    }\n                  }\n                }\n                \n              }\n            }\n          }\n        }\n      }\n    }\n`;\n\nconst ProjectsPage: React.FC<PageProps> = (props) => {\n  // console.log(data);\n  const data: wpPage = props.data?.wpPage;\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <PageProjects\n        wpPage={data}\n      />\n     \n    </Layout>\n  )\n}\n\nexport default ProjectsPage;\n\n"],"names":["props","blockProject","title","days","technology","pages","projectLink","link","renderPages","map","page","idx","_selfLayout$0$layout","_selfLayout$0$layout2","selfLayout","pageLayouts","image","layout","sourceUrl","imageAlt","altText","React","SwiperSlide","className","key","pagetitle","src","alt","renderTechnology","item","i","name","Link","to","length","viewBox","d","Swiper","effect","grabCursor","modules","EffectCards","projectsGrouped","arr","chunkSize","res","chunk","slice","push","sliceIntoChunks","projectsArray","projectRender","group","keyGroup","projectRowRender","project","uri","keyProject","Card","projects","wpPage","blockProjects","Projects","_props$data","data","Layout","SEO","PageProjects"],"sourceRoot":""}