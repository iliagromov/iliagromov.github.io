{"version":3,"file":"component---src-pages-projects-tsx-febec6b3cc03898dc853.js","mappings":"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","sources":["webpack://frontend/./src/components/common/Projects/Card.tsx","webpack://frontend/./src/components/common/Projects/Projects.tsx","webpack://frontend/./src/components/containers/PageProjects/PageProjects.tsx","webpack://frontend/./src/pages/projects.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { EffectCards } from \"swiper\";\nimport { GatsbyImage, getImage, StaticImage, } from \"gatsby-plugin-image\";\n\nimport { blockProject, projectPage } from '../../../shared/types';\n\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport './Card.sass';\n\ntype CardProps = {\n    blockProject: any,\n}\n\nconst Card: FC<CardProps> = (props) => {\n    const {\n        title,\n        publicData,\n        pagesCount,\n        pages,\n        link\n    } = props.blockProject.frontmatter;\n\n    // console.log(props.blockProject.frontmatter);\n\n    const projectLink = link ? link : '/projects';\n\n    const pagesAr = pages.map((project: any)=>{\n        const obj1 = project.page[0];\n        const obj2 = project.page[1];\n        const merged = {};\n        Object.keys(obj1).forEach((key) => merged[key] = obj1[key] ? obj1[key] : obj2[key]);\n        return merged\n      })\n    // console.log(pagesAr);\n\n    const renderPages = pagesAr && pagesAr.map((item: any, idx: number) => {\n       \n        let imgSrc = getImage(item.image);\n        let imgTitle = item.title;\n        return (\n            <SwiperSlide className=\"swiperCardPage\" key={`page${idx+1}`}> \n             \n                <GatsbyImage\n                    image={imgSrc}\n                    alt={imgTitle}\n                />\n            </SwiperSlide>\n        );\n    });\n\n\n    // const renderTechnology = technology && technology.map((item, i) => {\n    //     return (<span key={`technology${i}`} >{item.name}</span>)\n    // });\n\n    return (\n        <article className=\"card\">\n            <Link className=\"card-link\" to={projectLink}>\n                <div className=\"card-header\">\n                    <p>{publicData}</p>\n                    <h2>\n                        {title}\n                    </h2>\n                </div>\n\n                <div className=\"card-days\">\n                    <div className=\"card-days__count\">\n                      <span className=\"card-days__count-number\"> {pagesCount} </span> \n                        <span className=\"card-days__count-text\">\n                        Страниц разработано\n                        </span>\n                        \n                    </div>\n                    <div className=\"card-days__svg\">\n                        <svg className=\"half-circle\" viewBox=\"0 0 106 57\">\n                            <path d=\"M102 4c0 27.1-21.9 49-49 49S4 31.1 4 4\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"card-pages\">\n                    <Swiper\n                        effect={\"cards\"}\n                        grabCursor={true}\n                        modules={[EffectCards]}\n                        className=\"swiperCardPages\"\n                    >\n                        {renderPages}\n                    </Swiper>\n                </div>\n\n                <div className=\"tags\">\n                    {/* {renderTechnology} */}\n                </div>\n            </Link>\n        </article>\n    );\n}\n\n\nexport default Card;\n\n\n","import React, { Children, FC } from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from 'gatsby-link';\n\nimport './Projects.sass';\nimport './Card.sass';\nimport Card from './Card';\nimport { blockProject, WpProjectPage } from '../../../shared/types';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport { Scrollbar, Navigation, Pagination  } from \"swiper\";\nimport { SwiperToggles } from './SwiperToggles';\n\n\nimport './SwiperCard.sass'\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\n\n\ntype ProjectProps = {\n    projectsArray?: any\n\n}\n\nconst Projects: FC<ProjectProps> = (props) => {\n   \n    function sliceIntoChunks(arr: Object[], chunkSize: number) {\n        const res = [];\n        if(arr){\n            for (let i = 0; i < arr.length; i += chunkSize) {\n                const chunk = arr.slice(i, i + chunkSize);\n                res.push(chunk);\n            }\n        }\n        \n        return res;\n    }\n\n    const projectsGroupedMobile = sliceIntoChunks(props.projectsArray, 100);\n    const projectsGroupedDesktop = sliceIntoChunks(props.projectsArray, 5);\n\n\n    const hasWindow = typeof window !== 'undefined';\n    // let pagesArr; \n\n    const width = hasWindow ? window.innerWidth : 0;\n    const locationPath = hasWindow ? window.location.pathname : '/';\n    const isProjectPage = locationPath=== '/projects/';\n    const isMainPage = locationPath === '/';\n    const isDesktop = width >= 1024;\n    const slideItemsMainPageMobile = !isDesktop ? 1 : 5;\n    const spaceMobile = !isDesktop ? -70 : -100;\n\n    const projectsGrouped = ( isDesktop &&  !isMainPage) ? projectsGroupedDesktop : projectsGroupedMobile;\n\n\n    const projectRenderDesktop = props.projectsArray.map((project: WpProjectPage, idx: number) => {\n        const keyGroup = `groupDesktop${idx}`;\n\n        // console.log(project);\n\n        return <Card\n                blockProject={project}\n                key={keyGroup} />\n\n\n    });\n\n    const projectRenderMobileSlider = props.projectsArray && projectsGrouped.map((group: any, idx) => {\n        const keyGroup = `groupMobile${idx}`;\n        const spaceBetweenGutter = props.projectsArray.length >= 5 ? spaceMobile : 0 ; \n        const projectRowRender = group.map((project: WpProjectPage, idx: number) => {\n            // console.log(project);\n            const keyProject = `${keyGroup}__project${idx}`;\n            return (\n                <SwiperSlide key={keyProject} >\n                    <Card\n                        blockProject={project}\n                    />\n                </SwiperSlide>\n            )\n        });\n\n        return (\n            <div className='projects-content row' key={keyGroup} >\n                <Swiper\n                   scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Navigation, Pagination, Scrollbar]}\n                    spaceBetween={spaceBetweenGutter}\n                    slidesPerView={slideItemsMainPageMobile}\n                    className=\"projectsSwiper\"\n                >\n\n                    {projectRowRender}\n                    <SwiperToggles />\n                </Swiper>\n\n            </div>\n        )\n\n    });\n\n    const projectsRender = (isDesktop && !isMainPage) ? projectRenderDesktop : projectRenderMobileSlider;\n    \n\n    return (\n        <section className=\"projects isAnimate animated\">\n            <div className=\"page__title page_transform-uppercase page_text-center\">\n                <h2 className=\"page__subtitle_big\">Проекты</h2>\n                <h2 className=\"page__title_main page__title-h2 page_bold\">Проекты {50}+</h2>\n            </div>\n            <div className=\"wrapper\">\n                <div className={`inner ${(isDesktop && !isMainPage) ? 'projects-inner' :''}`}>\n                    {projectsRender}\n                </div>\n            </div>\n            { !isProjectPage && (\n                <Link className=\"page__btn \" to={'/projects'}> \n                Смотреть проекты\n                </Link>)\n            }\n            \n        </section>\n    );\n}\n\n\nexport default Projects;\n\n\n","import * as React from \"react\";\nimport { PageProps, useStaticQuery } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport Projects from \"../../common/Projects/Projects\";\n\ntype PageProjectsProps = {\n  pageData?:  any\n}\n\nconst PageProjects: React.FC<PageProjectsProps> = ({pageData}) => {\n\n  const projects = pageData.allMdx.nodes;\n \n  return (\n    <>\n      <Projects projectsArray={projects}/>\n    </>\n  )\n}\nexport default PageProjects;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layouts/Default\"\nimport SEO from \"../components/seo\"\nimport PageProjects from \"../components/containers/PageProjects/PageProjects\";\nimport { wpPage } from \"../shared/types\";\n\n\n\n\nexport const query = graphql`\n  query GetAllProjects {\n    allMdx(\n      filter: {frontmatter: {category: {eq: \"projects\"}}}\n      sort: {frontmatter: {sortIdx: ASC}}\n    ) {\n      nodes {\n        frontmatter {\n          link\n          title\n          publicData\n          pagesCount\n          pages{\n            page{\n              title\n              image{\n                id\n                childImageSharp {\n                  gatsbyImageData(\n                    placeholder: BLURRED\n                    layout: CONSTRAINED\n                    formats: [WEBP, JPG]\n                    transformOptions: { \n                      fit: INSIDE,\n                    }\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `\n\n\n\n\nconst ProjectsPage: React.FC<PageProps> = ({data}) => {\n  // console.log(props);\n  // const data: wpPage = props.data?.wpPage;\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <PageProjects pageData={data}/>\n     \n    </Layout>\n  )\n}\n\nexport default ProjectsPage;\n\n"],"names":["props","title","publicData","pagesCount","pages","link","blockProject","frontmatter","projectLink","pagesAr","map","project","obj1","page","obj2","merged","Object","keys","forEach","key","renderPages","item","idx","imgSrc","getImage","image","imgTitle","React","SwiperSlide","className","GatsbyImage","alt","Link","to","viewBox","d","Swiper","effect","grabCursor","modules","EffectCards","sliceIntoChunks","arr","chunkSize","res","i","length","chunk","slice","push","projectsGroupedMobile","projectsArray","projectsGroupedDesktop","hasWindow","window","width","innerWidth","locationPath","location","pathname","isProjectPage","isMainPage","isDesktop","slideItemsMainPageMobile","spaceMobile","projectsGrouped","projectRenderDesktop","keyGroup","Card","projectRenderMobileSlider","group","spaceBetweenGutter","projectRowRender","keyProject","scrollbar","hide","Navigation","Pagination","Scrollbar","spaceBetween","slidesPerView","SwiperToggles","projectsRender","_ref","pageData","projects","allMdx","nodes","Projects","data","Layout","SEO","PageProjects"],"sourceRoot":""}