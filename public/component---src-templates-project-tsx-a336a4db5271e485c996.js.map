{"version":3,"file":"component---src-templates-project-tsx-a336a4db5271e485c996.js","mappings":"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","sources":["webpack://frontend/./src/components/containers/PageProject/PageProject.tsx","webpack://frontend/./src/templates/project.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Link, graphql, navigate, useStaticQuery } from \"gatsby\";\nimport './PageProject.sass';\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { EffectCards, Navigation, Pagination  } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { ReactSVG } from \"react-svg\";\nimport { SwiperToggles } from \"../../common/Projects/SwiperToggles\";\n\n//FIXME: описать тип проекта\ntype PageDataProjectProps = {\n\tpageData: {\n\t\ttitle: string,\n\t\tpublicData: string,\n\t\tpagesCount: number,\n\t\tpages: [PageProjectProps]\n\t}\n}\n\ntype PageProjectProps = {\n\ttitle: string,\n\timage: {\n\t\tchildImageSharp: {\n\t\t\tgatsbyImageData: any\n\t\t}\n\t}\n}\n\n\nconst PageProject: React.FC<PageDataProjectProps> = ({ pageData }) => {\n\tconst format = 'Site';\n\tconst {\n\t\ticonArrow\n\t} = useStaticQuery(graphql`\n\t\tquery  {\n\t\t\ticonArrow: file(relativePath: { eq: \"icon-arrow.svg\" }) {\n\t\t\t  publicURL\n\t\t\t  name\n\t\t  \t}\n\t\t}`);\n\t\t\n\t// useEffect(() => {\n\t// \twindow.addEventListener('resize', function(){\n\t// \t\tdirectionMedia = window.innerWidth >=768 ? 'vertical' : 'horizontal';\n\t// \t});\n\t// });\n\n\tconst {\n\t\ttitle,\n\t\tpages\n\t} = pageData;\n\tconst pageInit = pages.length;\n\n\tconst renderPagesLink = pages?.map((page: PageProjectProps, idx: number) => {\n\t\treturn (\n\t\t\t<div className=\"tab-link\" key={`pagetitle${idx}`}>{page.title}</div>\n\t\t)\n\t});\n\n\tconst renderPagesImage = pages.map((page: PageProjectProps, idx: number) => {\n\n\t\tconst image = getImage(page.image);\n\n\t\treturn (\n\t\t\t<SwiperSlide key={`page${idx + 1}`}>\n\t\t\t\t<li className=\"SwiperSlideProjectCardPage\" key={`page${idx}`}>\n\t\t\t\t\t<h1>{page.title} </h1>\n\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\timage={image}\n\t\t\t\t\t\talt={'img'}\n\t\t\t\t\t\timgStyle={{ height: 'auto' }}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t</SwiperSlide>\n\n\t\t)\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t\n\t\t\t<Link to={'/projects'} className=\"btn-back page__btn\">\n\t\t\t\t<div className=\"page__btn_icon_arrow-left\"> \n\t\t\t\t\t<ReactSVG \n                        className=\"page-svg\" \n                        src={iconArrow.publicURL} />\n\t\t\t\t</div>\n\t\t\t\t<span>назад</span>\n\t\t\t</Link>\n\t\t\t<section className=\"project-page\">\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className=\"project-page-content\" >\n\t\t\t\t\t\t<div className=\"page__title page_transform-uppercase\">\n\t\t\t\t\t\t\t<h2 className=\"page__subtitle_big\">{format}</h2>\n\t\t\t\t\t\t\t<h2 className=\"page__title_main page__title-h2 page_bold\">{title}</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"project-page-content__description\">\n\t\t\t\t\t\t\t<Swiper\n\t\t\t\t\t\t\t\tinitialSlide={0}\n\t\t\t\t\t\t\t\teffect={\"cards\"}\n\t\t\t\t\t\t\t\tgrabCursor={true}\n\t\t\t\t\t\t\t\tmodules={[EffectCards, Navigation, Pagination]}\n\t\t\t\t\t\t\t\tclassName=\"swiperProjectCardPages\"\n\t\t\t\t\t\t\t\tdirection={'horizontal'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderPagesImage}\n\n\t\t\t\t\t\t\t\t<SwiperToggles />\n\t\t\t\t\t\t\t</Swiper>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"project-page-content__info\">\n\t\t\t\t\t\t\t<aside className=\"project-info\">\n\t\t\t\t\t\t\t\t<div className=\"project-info__element\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Ссылка:</h3>\n\t\t\t\t\t\t\t\t\t<a className=\"page__link page__link_site\" href=\"#\" target=\"_blank\">site.com</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"project-info__element project-info__element_list\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Список страниц:</h3>\n\t\t\t\t\t\t\t\t\t<nav className=\"tab-nav\">\n\t\t\t\t\t\t\t\t\t\t{renderPagesLink}\n\t\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"project-info__element project-info__task\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Задача:</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"page__text\">Разработка сайта для компании site.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"project-info__element project-info__technology\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Используемые технологии:</h3>\n\t\t\t\t\t\t\t\t\t<ul className=\"page__list\"></ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"project-info__element project-info__days\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Сроки:</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"page__text\">\n\t\t\t\t\t\t\t\t\t\t{/* <span className=\"page__number_days\">{days} </span> */}\n\t\t\t\t\t\t\t\t\t\t&nbsp;<span className=\"page__number_days_text\">дней.</span></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"project-info__element project-info__date\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"page__title-h3\">Дата создания:</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"page__text\">9 февраля 2019</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</>\n\t)\n}\nexport default PageProject;\n","import React from \"react\";\nimport Layout from \"../layouts/Default\";\nimport SEO from \"../components/seo\";\nimport { PageProps, graphql } from \"gatsby\";\nimport PageProject from \"../components/containers/PageProject/PageProject\";\nimport { MDXProvider } from \"@mdx-js/react\"\n\n\nexport const query = graphql`\n  query GetCurrentProject($id: String!) {\n    mdx( id: { eq: $id } ) {\n        frontmatter {\n          title\n          publicData\n          pagesCount\n          pages{\n            page{\n              title\n              image{\n                id\n                childImageSharp {\n                  gatsbyImageData(\n                    placeholder: BLURRED\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\n\nconst BlogPost: React.FC<PageProps> = (props) => {\n\n  \n  const title = ` Project ${props.data.mdx.frontmatter.title}`;\n\n  const pages = props.data.mdx.frontmatter.pages.map((project: any)=>{\n    const obj1 = project.page[0];\n    const obj2 = project.page[1];\n    const merged = {};\n    Object.keys(obj1).forEach((key) => merged[key] = obj1[key] ? obj1[key] : obj2[key]);\n    return merged\n  })\n  \n  const SelfProject = {\n    title: props.data.mdx.frontmatter.title,\n    publicData: props.data.mdx.frontmatter.publicData,\n    pagesCount: props.data.mdx.frontmatter.pagesCount,\n    pages: pages,\n  }\n\n  return (\n    <Layout>\n      <SEO title={title}  />\n      <PageProject pageData={SelfProject}/>\n    </Layout>\n  )\n}\nexport default BlogPost;"],"names":["_ref","pageData","iconArrow","useStaticQuery","title","pages","renderPagesLink","length","map","page","idx","React","className","key","renderPagesImage","image","getImage","SwiperSlide","GatsbyImage","alt","imgStyle","height","Link","to","ReactSVG","src","publicURL","Swiper","initialSlide","effect","grabCursor","modules","EffectCards","Navigation","Pagination","direction","SwiperToggles","href","target","props","data","mdx","frontmatter","project","obj1","obj2","merged","Object","keys","forEach","SelfProject","publicData","pagesCount","Layout","SEO","PageProject"],"sourceRoot":""}