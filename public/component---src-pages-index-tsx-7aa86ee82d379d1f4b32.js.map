{"version":3,"file":"component---src-pages-index-tsx-7aa86ee82d379d1f4b32.js","mappings":"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","sources":["webpack://frontend/./src/components/common/About/About.tsx","webpack://frontend/./src/components/common/Projects/Card.tsx","webpack://frontend/./src/components/common/Projects/Projects.tsx","webpack://frontend/./src/components/common/Banner/Banner.tsx","webpack://frontend/./src/components/common/Skills/Skills.tsx","webpack://frontend/./src/components/common/Services/Services.tsx","webpack://frontend/./src/components/common/Advanatages/Advanatages.tsx","webpack://frontend/./src/components/containers/PageMain/PageMain.tsx","webpack://frontend/./src/pages/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { StaticImage } from \"gatsby-plugin-image\"\n\n\nimport './style.sass';\ntype AboutProps = {\n}\n\nconst About: FC<AboutProps> = (props) => {\n\t\n    return (\n        <section className=\"about isAnimate animated\" id=\"about\">\n\t\t\t\t\t\t\t\t<div className=\"page__title page_transform-uppercase page_text-center\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"page__subtitle_big\">Обо мне</h2>\n\t\t\t\t\t\t\t\t\t<h2 className=\"page__title_main page__title-h2 page_bold\">Обо мне</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className=\"about-content\">\n\t\t\t\t\t\t<div className=\"page__img\" >\n\t\t\t\t\t\t\t<StaticImage\n\t\t\t\t\t\t\t src={'../../../assets/images/imgAbout.jpg'} \n\t\t\t\t\t\t\t alt={'img'} />\n                        </div>\n\t\t\t\t\t\t<div className=\"page__content\">\n\t\t\t\t\t\t\t<p className=\"page__text page_padding-bottom-20\">Frontend developer профессионально создаю сайты и веб-приложения, также имею навыки в интернет-маркетинге(понимание того что необходимо для сайта с точки зрения бизнеса).</p>\n\t\t\t\t\t\t\t<p className=\"page__text page_padding-bottom-20\">Считаю важным и правильным на этапе прототипирования, <strong className=\"page_bold\">совещаться с разработчиком!</strong></p>\n\t\t\t\t\t\t\t<p className=\"page__text\"> <strong className=\"page_bold\">On default: </strong></p>\n\t\t\t\t\t\t\t<ul className=\"page__lists\">\n\t\t\t\t\t\t\t\t<li className=\"page__list page__list_text\">Адаптивная верстка, даже если не&nbsp;имеете макеты сделаю адаптив&nbsp;по <strong className=\"page_bold\">методологии responsive;</strong></li>\n\t\t\t\t\t\t\t\t<li className=\"page__list page__list_text\">Внедрю микроразметку <strong className=\"page_bold\">schema.org и&nbsp;Open Graph, </strong>а&nbsp;также семантическую верстку;</li>\n\t\t\t\t\t\t\t</ul><a className=\"page__link page__link_active open-modal\" href=\"\" data-modal=\"modal-skills\">Открыть полный список</a>\n\t\t\t\t\t\t\t<p className=\"page__text\">В моей команде есть web-дизайнер, верстальщик, seo-специалист, маркетолог.</p>\n\t\t\t\t\t\t\t<p className=\"page__text page_padding-bottom-20\">В веб-разработке более 5-ти лет.</p>\n\t\t\t\t\t\t\t<p className=\"page__text page_padding-bottom-20\">Если вы из Москвы, то при сотрудничестве буду рад встретиться лично для обсуждения тонкостей работы!</p>\n\t\t\t\t\t\t\t<button className=\"page__btn js__create-modal open-modal\" data-modal=\"modal-callback\">Связаться со мной</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n    );\n}\n\n\nexport default About;\n\n\n","import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { EffectCards } from \"swiper\";\nimport { GatsbyImage, getImage, StaticImage, } from \"gatsby-plugin-image\";\n\nimport { blockProject, projectPage } from '../../../shared/types';\n\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport './Card.sass';\n\ntype CardProps = {\n    blockProject: any,\n}\n\nconst Card: FC<CardProps> = (props) => {\n    const {\n        title,\n        publicData,\n        pagesCount,\n        pages,\n        link\n    } = props.blockProject.frontmatter;\n\n    // console.log(props.blockProject.frontmatter);\n\n    const projectLink = link ? link : '/projects';\n\n    const pagesAr = pages.map((project: any)=>{\n        const obj1 = project.page[0];\n        const obj2 = project.page[1];\n        const merged = {};\n        Object.keys(obj1).forEach((key) => merged[key] = obj1[key] ? obj1[key] : obj2[key]);\n        return merged\n      })\n    // console.log(pagesAr);\n\n    const renderPages = pagesAr && pagesAr.map((item: any, idx: number) => {\n       \n        let imgSrc = getImage(item.image);\n        let imgTitle = item.title;\n        return (\n            <SwiperSlide className=\"swiperCardPage\" key={`page${idx+1}`}> \n             \n                <GatsbyImage\n                    image={imgSrc}\n                    alt={imgTitle}\n                />\n            </SwiperSlide>\n        );\n    });\n\n\n    // const renderTechnology = technology && technology.map((item, i) => {\n    //     return (<span key={`technology${i}`} >{item.name}</span>)\n    // });\n\n    return (\n        <article className=\"card\">\n            <Link className=\"card-link\" to={projectLink}>\n                <div className=\"card-header\">\n                    <p>{publicData}</p>\n                    <h2>\n                        {title}\n                    </h2>\n                </div>\n\n                <div className=\"card-days\">\n                    <div className=\"card-days__count\">\n                      <span className=\"card-days__count-number\"> {pagesCount} </span> \n                        <span className=\"card-days__count-text\">\n                        Страниц разработано\n                        </span>\n                        \n                    </div>\n                    <div className=\"card-days__svg\">\n                        <svg className=\"half-circle\" viewBox=\"0 0 106 57\">\n                            <path d=\"M102 4c0 27.1-21.9 49-49 49S4 31.1 4 4\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"card-pages\">\n                    <Swiper\n                        effect={\"cards\"}\n                        grabCursor={true}\n                        modules={[EffectCards]}\n                        className=\"swiperCardPages\"\n                    >\n                        {renderPages}\n                    </Swiper>\n                </div>\n\n                <div className=\"tags\">\n                    {/* {renderTechnology} */}\n                </div>\n            </Link>\n        </article>\n    );\n}\n\n\nexport default Card;\n\n\n","import React, { Children, FC } from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from 'gatsby-link';\n\nimport './Projects.sass';\nimport './Card.sass';\nimport Card from './Card';\nimport { blockProject, WpProjectPage } from '../../../shared/types';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport { Scrollbar, Navigation, Pagination  } from \"swiper\";\nimport { SwiperToggles } from './SwiperToggles';\n\n\nimport './SwiperCard.sass'\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\n\n\ntype ProjectProps = {\n    projectsArray?: any\n\n}\n\nconst Projects: FC<ProjectProps> = (props) => {\n   \n    function sliceIntoChunks(arr: Object[], chunkSize: number) {\n        const res = [];\n        if(arr){\n            for (let i = 0; i < arr.length; i += chunkSize) {\n                const chunk = arr.slice(i, i + chunkSize);\n                res.push(chunk);\n            }\n        }\n        \n        return res;\n    }\n\n    const projectsGroupedMobile = sliceIntoChunks(props.projectsArray, 100);\n    const projectsGroupedDesktop = sliceIntoChunks(props.projectsArray, 5);\n\n\n    const hasWindow = typeof window !== 'undefined';\n    // let pagesArr; \n\n    const width = hasWindow ? window.innerWidth : 0;\n    const locationPath = hasWindow ? window.location.pathname : '/';\n    const isProjectPage = locationPath=== '/projects/';\n    const isMainPage = locationPath === '/';\n    const isDesktop = width >= 1024;\n    const slideItemsMainPageMobile = !isDesktop ? 1 : 5;\n    const spaceMobile = !isDesktop ? -70 : -100;\n\n    const projectsGrouped = ( isDesktop &&  !isMainPage) ? projectsGroupedDesktop : projectsGroupedMobile;\n\n\n    const projectRenderDesktop = props.projectsArray.map((project: WpProjectPage, idx: number) => {\n        const keyGroup = `groupDesktop${idx}`;\n\n        // console.log(project);\n\n        return <Card\n                blockProject={project}\n                key={keyGroup} />\n\n\n    });\n\n    const projectRenderMobileSlider = props.projectsArray && projectsGrouped.map((group: any, idx) => {\n        const keyGroup = `groupMobile${idx}`;\n        const spaceBetweenGutter = props.projectsArray.length >= 5 ? spaceMobile : 0 ; \n        const projectRowRender = group.map((project: WpProjectPage, idx: number) => {\n            // console.log(project);\n            const keyProject = `${keyGroup}__project${idx}`;\n            return (\n                <SwiperSlide key={keyProject} >\n                    <Card\n                        blockProject={project}\n                    />\n                </SwiperSlide>\n            )\n        });\n\n        return (\n            <div className='projects-content row' key={keyGroup} >\n                <Swiper\n                   scrollbar={{\n                    hide: true,\n                  }}\n                  modules={[Navigation, Pagination, Scrollbar]}\n                    spaceBetween={spaceBetweenGutter}\n                    slidesPerView={slideItemsMainPageMobile}\n                    className=\"projectsSwiper\"\n                >\n\n                    {projectRowRender}\n                    <SwiperToggles />\n                </Swiper>\n\n            </div>\n        )\n\n    });\n\n    const projectsRender = (isDesktop && !isMainPage) ? projectRenderDesktop : projectRenderMobileSlider;\n    \n\n    return (\n        <section className=\"projects isAnimate animated\">\n            <div className=\"page__title page_transform-uppercase page_text-center\">\n                <h2 className=\"page__subtitle_big\">Проекты</h2>\n                <h2 className=\"page__title_main page__title-h2 page_bold\">Проекты {50}+</h2>\n            </div>\n            <div className=\"wrapper\">\n                <div className={`inner ${(isDesktop && !isMainPage) ? 'projects-inner' :''}`}>\n                    {projectsRender}\n                </div>\n            </div>\n            { !isProjectPage && (\n                <Link className=\"page__btn \" to={'/projects'}> \n                Смотреть проекты\n                </Link>)\n            }\n            \n        </section>\n    );\n}\n\n\nexport default Projects;\n\n\n","import React, { FC, useEffect, useRef, useState } from 'react';\n\nimport './Banner.sass';\n\n\nconst CanvasRings: React.FC = (props) => {\n  //https://hashnode.blainegarrett.com/html-5-canvas-react-refs-and-typescript-ckf4jju8r00eypos1gyisenyf\n  // Typed useRef usage\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\n\n  let state = {\n    canvasWidth: 1920,\n    canvasHeight: 1024,\n  }\n  useEffect(() => {\n    if (canvasRef.current) {\n\n\n      canvasCtxRef.current = canvasRef.current.getContext('2d');\n\n      const cnv = canvasCtxRef.current;\n      const ctx = canvasCtxRef.current;\n\n      const numberOfRings = 3;\n      const ringRadiusOffset = 10;\n      let ringRadius = 400;\n      const waveOffset = 15;\n      const colors = ['#D03AFF', '#9724ba', '#560d6d'];\n      // const colors = ['#CEF500', '#89be21', '#70a900'];\n      let startAngle = 0;\n\n      const maxWavesAmplitude = 17;\n      const numberOfWaves = 7;\n\n      let centerX: any;\n      let centerY: any;\n\n      function init() {\n        cnv!.canvas.width = cnv!.canvas.offsetParent.offsetWidth;\n        cnv!.canvas.height = window.innerHeight - document.querySelector('.header').offsetHeight * 2;\n\n        let selfCnvHeight = (cnv && cnv!.canvas) ? cnv!.canvas.height : state.canvasHeight;\n        let selfCnvWidth = (cnv && cnv!.canvas) ? cnv!.canvas.width : state.canvasWidth;\n        // console.log(cnv!.canvas.height);\n        // console.log(\"🚀 ~ file: Banner.tsx:43 ~ init ~ selfCnvHeight:\", selfCnvHeight)\n\n        if (selfCnvHeight <= 700  || selfCnvWidth <= 768) {\n          ringRadius = 200;\n          // console.log(\"🚀 ~ file: Banner.tsx:46 ~ init ~ ringRadius:\", ringRadius)\n        }\n        else if (selfCnvHeight <= 750) {\n          ringRadius = 320;\n          // console.log(\"🚀 ~ file: Banner.tsx:49 ~ init ~ ringRadius:\", ringRadius)\n        }\n        else if (selfCnvHeight <= 1050 || selfCnvWidth <= 768) {\n          ringRadius = 350;\n          // console.log(\"🚀 ~ file: Banner.tsx:52 ~ init ~ ringRadius:\", ringRadius)\n        }\n        else {\n          ringRadius = 380;\n          // console.log(\"🚀 ~ file: Banner.tsx:55 ~ init ~ ringRadius:\", ringRadius)\n\n        }\n        centerX = cnv!.canvas.width / 2;\n        centerY = cnv!.canvas.height / 2;\n\n      }\n\n      init();\n\n      function updateRings() {\n        for (let i = 0; i < numberOfRings; i++) {\n          let radius = i * ringRadiusOffset + ringRadius;\n          let offsetAngle = i * waveOffset * Math.PI / 180;\n          drawRing(radius, colors[i], offsetAngle);\n        }\n        startAngle >= 360 ? startAngle = 0 : startAngle++;\n      }\n\n      function drawRing(radius: any, color: any, offsetAngle: any) {\n        ctx!.strokeStyle = color;\n        ctx!.lineWidth = 11;\n\n        ctx!.beginPath();\n\n\n        for (let j = -180; j < 180; j++) {\n          let currentAngle = (j + startAngle) * Math.PI / 180;\n          let displacement = 0;\n          let now = Math.abs(j);\n          if (now > 70) {\n            displacement = (now - 70) / 70;\n          }\n          if (displacement >= 1) {\n            displacement = 1;\n          }\n          let waveAmplitude = radius + displacement * Math.sin((currentAngle + offsetAngle) * numberOfWaves) * maxWavesAmplitude;\n          let x = centerX + Math.cos(currentAngle) * waveAmplitude;\n          let y = centerY + Math.sin(currentAngle) * waveAmplitude;\n\n          j > -180 ? ctx!.lineTo(x, y) : ctx!.moveTo(x, y);\n        }\n        ctx!.closePath();\n        ctx!.stroke();\n      }\n\n      function loop() {\n        ctx!.clearRect(0, 0, state.canvasWidth, state.canvasHeight);\n        updateRings();\n        requestAnimationFrame(loop);\n      }\n\n      loop();\n\n\n      window.addEventListener('resize', init);\n    }\n  }, []);\n\n\n  return (\n    <canvas ref={canvasRef}></canvas>\n  );\n};\n\n\nexport const Banner: FC = () => {\n\n  return (\n    <section className=\"banner\">\n\n      <div className=\"canvas\">\n        <CanvasRings />\n      </div>\n      <div className=\"banner__logo\">\n        <div className=\"page__subtitle\">Ilia\n          <span className=\"page_bold\">Gromov</span>\n        </div>\n        <h1 className=\"page__title\">\n          {/* <div className=\"page__title_first\" >iGromov <span>developer</span></div>\n          <div>Digital</div> */}\n          <div className=\"page__title_first\" >Full <span>developer</span></div>\n          <div>Stack</div>\n        </h1>\n      </div>\n    </section>\n  )\n}\n","import React, { FC } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { ReactSVG } from 'react-svg';\nimport './style.sass';\n\n\ntype SkillsProps = {\n}\n\nconst Skills: FC<SkillsProps> = () => {\n  const { allMdx: {nodes} } = useStaticQuery(\n    graphql` \n      \n      query GetAllSvgSkill {\n        allMdx(\n            filter: {frontmatter: {category: {eq: \"skills\"}}}\n            sort: {frontmatter: {sortIdx: ASC}}\n            ) {\n          nodes {\n            frontmatter {\n              title\n              image {\n                id\n                publicURL\n              }\n            }\n          }\n        }\n      }\n    `);\n  const skillsCount = nodes.length;\n  const skills = nodes;\n\n  const skillsRender = skills && skills.map((skill: any, i: number) => {\n\n    let svgSrc = skill.frontmatter.image.publicURL ? skill.frontmatter.image.publicURL : '';\n    let title = skill.frontmatter.title\n    return (\n      <div className=\"skill\" key={`skill${i}`}>\n        <div className=\"page__img\">\n          <ReactSVG \n          src={svgSrc} \n            title={title}\n            desc=\"Description\"\n            className=\"wrapper-class-name\"\n            useRequestCache={false}\n            wrapper=\"span\"\n\n            beforeInjection={(svg) => {\n              svg.classList.add('svg-class-name')\n            }}\n          />\n        </div>\n        <div className=\"page__subtitle\">{title}</div>\n      </div>\n    )\n  });\n\n  return (\n    <section className=\"skills isAnimate animated\">\n      <div className=\"page__title page_transform-uppercase page_text-center\">\n        <div className=\"page__subtitle_big\">Навыки</div>\n        <h2 className=\"page__title_main page__title-h2 page_bold\">Навыки {skillsCount}</h2>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"skills-content\">\n          {skillsRender}\n        </div>\n      </div>\n    </section>\n  );\n}\n\n\nexport default Skills;\n\n\n","import { graphql, useStaticQuery } from 'gatsby';\nimport React, { FC, useEffect, useRef } from 'react';\n// import { StaticImage } from \"gatsby-plugin-image\";\n\nimport './style.sass';\n\nimport { wpPage } from \"../../../shared/types\";\nimport { ReactSVG } from 'react-svg';\n\n\ntype ServicesProps = {\n}\n\n\n\nconst Services: FC<ServicesProps> = (props) => {\n    const { allMdx: {nodes} } = useStaticQuery(\n        graphql` \n          \n          query GetAllSvgService {\n            allMdx(\n                filter: {frontmatter: {category: {eq: \"services\"}}}\n                sort: {frontmatter: {sortIdx: ASC}}\n                ) {\n              nodes {\n                frontmatter {\n                  title\n                  description\n                  image {\n                    id\n                    publicURL\n                  }\n                }\n              }\n            }\n          }\n        `);\n    // console.log(nodes);\n    const services = nodes;\n\n    const serviceRender = services && services.map((service: any, i: number) => {\n        let svgSrc = service.frontmatter.image.publicURL ? service.frontmatter.image.publicURL : '';\n        let title = service.frontmatter.title;\n        let description = service.frontmatter.description;\n        \n        return (\n            <div className=\"service\" key={`service${i}`}>\n                <div className=\"page__img\">\n                <ReactSVG \n                src={svgSrc} \n                    title={title}\n                    desc=\"Description\"\n                    className=\"wrapper-class-name\"\n                    useRequestCache={false}\n                    wrapper=\"span\"\n\n                    beforeInjection={(svg) => {\n                    svg.classList.add('svg-class-name')\n                    }}\n                />\n\n                </div>\n                <h4 className=\"page__subtitle\">{title}</h4>\n                <div className=\"page__description\">\n                    <h4 className=\"page__subtitle page_text-center\">{title}</h4>\n                    <p className=\"page__text\">{description}</p>\n                </div>\n            </div>\n        )\n    });\n\n    return (\n        <div>\n            <section className=\"services isAnimate animated\">\n                <div className=\"page__title page_transform-uppercase page_text-center\">\n                    <h2 className=\"page__subtitle_big\">Услуги</h2>\n                    <h2 className=\"page__title_main page__title-h2 page_bold\">Услуги</h2>\n                </div>\n                <div className=\"wrapper\">\n                    <div className=\"services-content\">\n                        {serviceRender}\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\n\nexport default Services;","import React, { FC } from 'react';\n\nimport './style.sass';\ntype AdvanatagesProps = {\n}\n\nconst Advanatages: FC<AdvanatagesProps> = (props) => {\n   \n    const advantages = [\n        'Профессиональный подход',\n            'Использование современных технологий',\n            'Здравая оценка сроков',\n            'Разработка по стандартам',\n            'Большую часть дня Online',\n            'Оптимизация процесса и кода',\n            'Работаю исключительно по ТЗ',\n            'Ответственное исполнение'\n        ]\n    const advanatagesRender =  advantages &&  advantages.map((advanatage: any, i: number) => {\n        return (\n            <li className=\"page__list-item\" key={`skill${i}`}> <span className=\"page__line_before\">{advanatage}</span></li>\n        )\n    });\n\n    return (\n        <section className=\"advantages isAnimate animated\">\n                <div className=\"page__title page_transform-uppercase page_text-center\">\n                    <h2 className=\"page__subtitle_big\">Преимущества</h2>\n                    <h2 className=\"page__title_main page__title-h2 page_bold\">Преимущества</h2>\n                </div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className=\"advantages-content\">\n\t\t\t\t\t\t<ol className=\"page__lists\">\n                                {advanatagesRender}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n    );\n}\n\n\nexport default Advanatages;\n\n\n","import * as React from \"react\";\nimport { Link, PageProps, useStaticQuery } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { Banner } from \"../../common/Banner/Banner\";\nimport Skills from \"../../common/Skills/Skills\";\nimport Services from \"../../common/Services/Services\";\nimport Advanatages from \"../../common/Advanatages/Advanatages\";\nimport Projects from \"../../common/Projects/Projects\";\nimport About from \"../../common/About/About\";\nimport { wpPage } from \"../../../shared/types\";\n\ntype PageMainProps = {\n  pageData?:  any\n}\n\n\n\n\nconst PageMain: React.FC<PageMainProps> = ({pageData}) => {\n  \n   const projects = pageData.allMdx.nodes;\n \n  return (\n    <>\n      <Banner />\n      <Skills />\n      <Services />\n      <Advanatages/>\n      <Projects projectsArray={projects}/>\n      \n      <About />  \n    </>\n  )\n}\nexport default PageMain;\n","import * as React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport Layout from \"../layouts/Default\";\nimport SEO from \"../components/seo\"\nimport PageMain  from \"../components/containers/PageMain/PageMain\";\nimport { wpPage } from \"../shared/types\";\n\n\n\nexport const query = graphql`\n  query GetAllProjects {\n        allMdx(\n          filter: {frontmatter: {category: {eq: \"projects\"}}}\n          sort: {frontmatter: {sortIdx: ASC}}\n          limit: 10\n        ) {\n          nodes {\n            frontmatter {\n              link\n              title\n              publicData\n              pagesCount\n              pages{\n                page{\n                  title\n                  image{\n                    id\n                    childImageSharp {\n                      gatsbyImageData(\n                        layout: CONSTRAINED\n                        formats: [WEBP, JPG]\n                        transformOptions: { \n                          fit: INSIDE,\n                        }\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n  `\n\nconst IndexPage: React.FC<PageProps> = ({data}) => {\n  // console.log(data);\n  return (\n    <Layout>\n\n      <SEO title=\"Iila Gromov\" />\n      <PageMain pageData={data}/>\n      {/* <Link to=\"/\">Russian</Link>\n      <Link to=\"/en\">English</Link> */}\n     \n      {/* {data.wpPage.content} */}\n    </Layout>\n  )\n}\n\nexport default IndexPage;\n\n"],"names":["props","React","className","id","StaticImage","src","alt","__imageData","require","href","title","publicData","pagesCount","pages","link","blockProject","frontmatter","projectLink","pagesAr","map","project","obj1","page","obj2","merged","Object","keys","forEach","key","renderPages","item","idx","imgSrc","getImage","image","imgTitle","SwiperSlide","GatsbyImage","Link","to","viewBox","d","Swiper","effect","grabCursor","modules","EffectCards","sliceIntoChunks","arr","chunkSize","res","i","length","chunk","slice","push","projectsGroupedMobile","projectsArray","projectsGroupedDesktop","hasWindow","window","width","innerWidth","locationPath","location","pathname","isProjectPage","isMainPage","isDesktop","slideItemsMainPageMobile","spaceMobile","projectsGrouped","projectRenderDesktop","keyGroup","Card","projectRenderMobileSlider","group","spaceBetweenGutter","projectRowRender","keyProject","scrollbar","hide","Navigation","Pagination","Scrollbar","spaceBetween","slidesPerView","SwiperToggles","projectsRender","CanvasRings","canvasRef","useRef","canvasCtxRef","state","canvasWidth","canvasHeight","useEffect","current","getContext","cnv","ctx","numberOfRings","ringRadiusOffset","ringRadius","waveOffset","colors","startAngle","maxWavesAmplitude","numberOfWaves","centerX","centerY","init","canvas","offsetParent","offsetWidth","height","innerHeight","document","querySelector","offsetHeight","selfCnvHeight","selfCnvWidth","updateRings","radius","offsetAngle","Math","PI","drawRing","color","strokeStyle","lineWidth","beginPath","j","currentAngle","displacement","now","abs","waveAmplitude","sin","x","cos","y","lineTo","moveTo","closePath","stroke","loop","clearRect","requestAnimationFrame","addEventListener","ref","Banner","Skills","allMdx","nodes","useStaticQuery","skillsCount","skillsRender","skill","svgSrc","publicURL","ReactSVG","desc","useRequestCache","wrapper","beforeInjection","svg","classList","add","serviceRender","service","description","advantages","advanatagesRender","advanatage","_ref","pageData","projects","Services","Advanatages","Projects","About","data","Layout","SEO","PageMain"],"sourceRoot":""}