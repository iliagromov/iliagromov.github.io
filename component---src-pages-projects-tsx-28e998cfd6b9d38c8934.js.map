{"version":3,"file":"component---src-pages-projects-tsx-28e998cfd6b9d38c8934.js","mappings":"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","sources":["webpack://frontend/./src/components/common/Projects/Card.tsx","webpack://frontend/./src/components/common/Projects/Projects.tsx","webpack://frontend/./src/components/containers/PageProjects/PageProjects.tsx","webpack://frontend/./src/pages/projects.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { EffectCards } from \"swiper\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nimport { blockProject, projectPage } from '../../../shared/types';\n\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport './Card.sass';\n\ntype CardProps = {\n    blockProject: blockProject,\n    projectLink: string,\n}\n\nconst Card: FC<CardProps> = (props) => {\n    const {\n        blockProject: {\n            title,\n            days,\n            technology,\n            pages\n        },\n        projectLink,\n    } = props;\n\n    const link = projectLink ? projectLink : '/projects';\n\n    const renderPages = pages && pages.map((page: projectPage, idx: number) => {\n        const image = page.image ? page.image.sourceUrl : '';\n        const imageAlt = page.image ? page.image.alt : page.title;\n        return (\n            <SwiperSlide className=\"swiperCardPage\" key={`page${idx+1}`}> {page.pagetitle} {idx+1}\n                <img src={image} alt={imageAlt} />\n            </SwiperSlide>\n        );\n    });\n\n\n    const renderTechnology = technology && technology.map((item, i) => {\n        return (<span key={`technology${i}`} >{item.name}</span>)\n    });\n\n    return (\n        <article className=\"card\">\n            <Link className=\"card-link\" to={link}>\n                <div className=\"card-header\">\n                    <p>Sep 11th 2020</p>\n                    <h2>\n                        {title}\n                    </h2>\n                </div>\n\n                <div className=\"card-days\">\n                    <div className=\"card-days__count\">\n                        {pages.length} \n                        <span className=\"card-days__count-text\">\n                        Страниц разработано\n                        </span>\n                        \n                    </div>\n                    <div className=\"card-days__svg\">\n                        <svg className=\"half-circle\" viewBox=\"0 0 106 57\">\n                            <path d=\"M102 4c0 27.1-21.9 49-49 49S4 31.1 4 4\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"card-pages\">\n                    <Swiper\n                        effect={\"cards\"}\n                        grabCursor={true}\n                        modules={[EffectCards]}\n                        className=\"swiperCardPages\"\n                    >\n                        {renderPages}\n                    </Swiper>\n                </div>\n\n                <div className=\"tags\">\n                    {renderTechnology}\n                </div>\n            </Link>\n        </article>\n    );\n}\n\n\nexport default Card;\n\n\n","import React, { FC } from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from 'gatsby-link';\n\nimport './Projects.sass';\nimport './Card.sass';\nimport Card from './Card';\nimport { blockProject, WpProjectPage } from '../../../shared/types';\n\ntype ProjectProps = {\n    projectsArray: WpProjectPage[],\n}\n\n\nconst Projects: FC<ProjectProps> = (props) => {\n    \n    function sliceIntoChunks(arr: Object[], chunkSize: number) {\n        const res = [];\n        for (let i = 0; i < arr.length; i += chunkSize) {\n            const chunk = arr.slice(i, i + chunkSize);\n            res.push(chunk);\n        }\n        return res;\n    }\n\n    const projectsGrouped = sliceIntoChunks(props.projectsArray, 5);\n\n    const projectRender = props.projectsArray && projectsGrouped.map((group: any, idx) => {\n        const keyGroup = `group${idx}`;\n\n        const projectRowRender = group.map((project: WpProjectPage, idx: number) => {\n            const projectLink = project.uri;\n            // console.log(project);\n            const keyProject = `${keyGroup}__project${idx}`;\n            return (\n                <Card\n                    projectLink={projectLink}\n                    blockProject={project.blockProject}\n                    key={keyProject} />\n            )\n        });\n        \n        return (\n            <div className='projects-content row' key={keyGroup} >\n                {projectRowRender}\n            </div>\n        )\n\n    });\n\n    return (\n        <section className=\"projects isAnimate animated\">\n            <div className=\"page__title page_transform-uppercase page_text-center\">\n                <h2 className=\"page__subtitle_big\">Проекты</h2>\n                <h2 className=\"page__title_main page__title-h2 page_bold\">Проекты{props.projectsArray.length}+</h2>\n            </div>\n            <div className=\"wrapper\">\n                <div className=\"inner\">\n                    {projectRender}\n                </div>\n            </div>\n        </section>\n    );\n}\n\n\nexport default Projects;\n\n\n","import * as React from \"react\";\nimport { PageProps, useStaticQuery } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport Projects from \"../../common/Projects/Projects\";\n\ntype PageProjectsProps = {\n  wpQueryData: any\n}\n\n\nconst PageProjects: React.FC<PageProjectsProps> = (props) => {\n\n\n  const projects = props.wpQueryData.allWpProject.nodes\n  return (\n    <>\n      <Projects projectsArray={projects}/>\n     \n\n    </>\n  )\n}\nexport default PageProjects;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layouts/Default\"\nimport SEO from \"../components/seo\"\n// import { StaticImage, GatsbyImage, getImage, withArtDirection  } from \"gatsby-plugin-image\";\nimport PageProjects from \"../components/containers/PageProjects/PageProjects\";\n\n\nexport const query = graphql`\n  query {\n    allWpProject {\n      nodes {\n        slug\n        title\n        link\n        uri\n        blockProject {\n          days\n          description\n          format\n          pages {\n            pagetitle\n            image {\n              altText\n              title\n              sourceUrl\n            }\n            pageLayouts {\n              layout {\n                altText\n                title\n                sourceUrl\n              }\n            }\n          }\n          title\n          task\n          sitelink\n          shortdescription\n        }\n        \n      }\n    }\n  }\n`;\n\nconst ProjectsPage: React.FC<PageProps> = ({data}) => {\n  // console.log(data);\n\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <PageProjects\n        wpQueryData={data}\n      />\n     \n    </Layout>\n  )\n}\n\nexport default ProjectsPage;\n\n"],"names":["props","blockProject","title","days","technology","pages","projectLink","link","renderPages","map","page","idx","image","sourceUrl","imageAlt","alt","React","SwiperSlide","className","key","pagetitle","src","renderTechnology","item","i","name","Link","to","length","viewBox","d","Swiper","effect","grabCursor","modules","EffectCards","projectsGrouped","arr","chunkSize","res","chunk","slice","push","sliceIntoChunks","projectsArray","projectRender","group","keyGroup","projectRowRender","project","uri","keyProject","Card","projects","wpQueryData","allWpProject","nodes","Projects","_ref","data","Layout","SEO","PageProjects"],"sourceRoot":""}